# This is the docker compose file for standalone cluster on a server host
# Author: Yingding Wang
# Docker compose file version 3.3
version: "3.8"
services:
  spark-master:
    image: "yingding/spark_master:latest"
    ports:
      - "8080:8080"
      - "4040:4040"
    networks:
      - spark-net-bridge
#    deploy:
#      placement:
#        # set node labels using docker node update --label-add key=value <NODE ID> from swarm manager
#        constraints:
#          - node.labels.role==master
  spark-worker:
    image: "yingding/spark_worker:latest"
    ports:
      - "8081-8082:8081" # warning, the range of the host-port shall be the same as the number of replicas you want.
    networks:
      - spark-net-bridge
    environment:
      - CORES=3
      - MEMORY=32G
    depends_on:
      - spark-master
    deploy:
      replicas: 2
#      placement:
#        # set node labels using docker node update --label-add key=value <NODE ID> from swarm manager
#        constraints:
#          - node.labels.role==worker

networks: # define the
  spark-net-bridge:
    driver: bridge #overlay for multi hosts
#https://www.ionos.com/community/server-cloud-infrastructure/docker/launch-and-orchestrate-docker-containers-with-docker-compose/
#https://vsupalov.com/flask-docker-compose-development-dependencies/
# docker-compose -f MyFile.yml up
# install docker compose with curl 2 steps
# https://docs.docker.com/compose/install/
# use the -d option is important, otherwise it runs in foreground
# docker-compose -f docker-compose-standalone-server.yml up -d
# to start this application
#
# stop and remove the containers
# docker-compose -f docker-compose-standalone-server.yml down -v
